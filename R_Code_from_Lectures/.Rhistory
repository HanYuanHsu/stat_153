b = as.numeric(modar$coefficients[i] + sd[i]*qt(p=.975, df=n-2*2-1))
print(c(a,b))
}
chi975 = qchisq(.975, df=n-5)
chi025 = qchisq(.025, df=n-5)
RSS = sum((modar$residuals)^2)
c(sqrt(RSS/chi975), sqrt(RSS/chi025))
phi0 = modar$coefficients[1]
phi1 = modar$coefficients[2]
phi2 = modar$coefficients[3]
root = polyroot(c(-phi2, -phi1, 1))[1]
r = Mod(root)
theta = Arg(root)
r
theta
phi0 = modar$coefficients[1]
phi1 = modar$coefficients[2]
phi2 = modar$coefficients[3]
root = polyroot(c(-phi2, -phi1, 1))[1]
phi0 = modar$coefficients[1]
phi1 = modar$coefficients[2]
phi2 = modar$coefficients[3]
root = polyroot(c(-phi2, -phi1, 1))[1]
root
phi0 = modar$coefficients[1]
phi1 = modar$coefficients[2]
phi2 = modar$coefficients[3]
roots = polyroot(c(-phi2, -phi1, 1))[1] # real roots
roots
phi0 = modar$coefficients[1]
phi1 = modar$coefficients[2]
phi2 = modar$coefficients[3]
roots = polyroot(c(-phi2, -phi1, 1)) # real roots
roots
phi0 = modar$coefficients[1]
phi1 = modar$coefficients[2]
phi2 = modar$coefficients[3]
roots = polyroot(c(-phi2, -phi1, 1)) # real roots
roots
alpha = roots[1]
beta = roots[2]
c = as.numeric(phi0 / (1-phi1-phi2))
c
phi0 = modar$coefficients[1]
phi1 = modar$coefficients[2]
phi2 = modar$coefficients[3]
roots = polyroot(c(-phi2, -phi1, 1)) # real roots
roots
alpha = roots[1]
beta = roots[2]
c = as.numeric(phi0 / (1-phi1-phi2))
c
phi0
(1-phi1-phi2)
a = (beta*(y[n-1]-c) - (y[n]-c)) / (beta-alpha)
b = (-alpha*(y[n-1]-c) + (y[n]-c)) / (beta-alpha)
a
b
phi0 = modar$coefficients[1]
phi1 = modar$coefficients[2]
phi2 = modar$coefficients[3]
roots = polyroot(c(-phi2, -phi1, 1)) # real roots
roots
alpha = as.numeric(roots[1])
beta = as.numeric(roots[2])
phi0 = modar$coefficients[1]
phi1 = modar$coefficients[2]
phi2 = modar$coefficients[3]
roots = polyroot(c(-phi2, -phi1, 1)) # real roots
roots
alpha = Re(roots[1])
beta = Re(roots[2])
alpha
a = (beta*(y[n-1]-c) - (y[n]-c)) / (beta-alpha)
b = (-alpha*(y[n-1]-c) + (y[n]-c)) / (beta-alpha)
a
b
phi0 = modar$coefficients[1]
phi1 = modar$coefficients[2]
phi2 = modar$coefficients[3]
roots = polyroot(c(-phi2, -phi1, 1)) # real roots
roots
alpha = Re(roots[1]) # convert to real numbers
beta = Re(roots[2])
c = as.numeric(phi0 / (1-phi1-phi2))
c
a = (beta*(y[n-1]-c) - (y[n]-c)) / (beta-alpha)
b = (-alpha*(y[n-1]-c) + (y[n]-c)) / (beta-alpha)
a
b
pred <- function(t) {
t = t-(n-1)
c + a*alpha^t + b*beta^t
}
y.pred = c(y, sapply((n+1):(n+36), pred))
plot(1:(n+36), y.pred, type='l')
abline(v=n, col='red')
#lines(89:n, sapply(89:n, pred), col='blue')
Gamhat = matrix(sighat^2, 1, 1) #this is the uncertainty for the first i.e., (n+1)^th prediction
vkp = matrix(modar$coefficients[2], 1, 1) #this is the estimate for phi1
for(i in 1:(36-1))
{
covterm = Gamhat %*% vkp
varterm = (sighat^2) + (t(vkp) %*% (Gamhat %*% vkp))
Gamhat = cbind(Gamhat, covterm)
Gamhat = rbind(Gamhat, c(t(covterm), varterm))
# update vkp
if (i < p) {vkp = c(modar$coefficients[(i+2)], vkp)}
if (i >= p) {vkp = c(0, vkp)}
}
predsd = sqrt(diag(Gamhat))
predsd
plot(700:(n+36), y.pred, type='l')
plot(700:(n+36), y.pred[700:], type='l')
plot(700:(n+36), y.pred[700:(n+36)], type='l')
abline(v=n, col='red')
plot(600:(n+36), y.pred[600:(n+36)], type='l')
abline(v=n, col='red')
plot(650:(n+36), y.pred[650:(n+36)], type='l')
abline(v=n, col='red')
plot(650:(n+36), y.pred[650:(n+36)], type='l')
abline(v=n, col='red')
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
arrows(x0=pred.time, y0=predlower, x1=pred.time, y1=predupper, code=3, angle=90, length=0.5, col="red", lwd=2)
plot(650:(n+36), y.pred[650:(n+36)], type='l')
abline(v=n, col='red')
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
arrows(x0=pred.time, y0=predlower, x1=pred.time, y1=predupper, code=3, angle=90, col="red", lwd=2)
library(dplyr)
library(ggplot2)
set.seed(111)
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y))
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(aes(x=n))
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n)
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n, color='red')
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n, color='red') +
geom_ribbon(aes(x=pred.time, ymin=0, ymax=100000))
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n, color='red') +
geom_ribbon(aes(ymin=0, ymax=100000))
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n, color='red') +
geom_ribbon(aes(ymin=0, ymax=1))
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n, color='red') +
geom_ribbon(aes(x=t, ymin=0, ymax=1))
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n, color='red') +
geom_ribbon(aes(x=pred.time, ymin=0, ymax=1))
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n, color='red') +
geom_ribbon(aes(x=t, ymin=ylower, ymax=yupper))
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n, color='red') +
geom_ribbon(aes(x=t, ymin=ylower, ymax=yupper), color='red', alpha=.5)
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n, color='red') +
geom_ribbon(aes(x=t, ymin=ylower, ymax=yupper), alpha=.2)
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n, color='red') +
geom_ribbon(aes(x=t, ymin=0, ymax=yupper), alpha=.2)
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n, color='red') +
geom_ribbon(aes(x=t, ymin=ylower, ymax=yupper), alpha=.2)
pred.time = (n+1):(n+36)
pred.part = sapply(pred.time, pred)
predupper = pred.part + 2*predsd
predlower = pred.part - 2*predsd
yupper = c(y, predupper)
ylower = c(y, predlower)
start = 651 # we only plot observations after this time (inclusive)
df = data.frame(
t = start:(n+36),
y = y.pred[start:(n+36)],
yupper = yupper[start:(n+36)],
ylower = ylower[start:(n+36)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = n, color='red') +
geom_ribbon(aes(x=t, ymin=ylower, ymax=yupper), alpha=.2)
Xmat = matrix(1, nrow=n-2, ncol=3)
Xmat[,2] = y[2:(n-1)]
Xmat[,3] = y[3:n]
modar = lm(y[1:(n-2)] ~ -1 + Xmat)
summary(modar)
Xmat = matrix(1, nrow=n-2, ncol=3)
Xmat[,2] = y[2:(n-1)]
Xmat[,3] = y[3:n]
modar.back = lm(y[1:(n-2)] ~ -1 + Xmat)
summary(modar.back)
Xmat = matrix(1, nrow=n-2, ncol=3)
Xmat[,2] = y[2:(n-1)]
Xmat[,3] = y[1:(n-2)]
modar = lm(y[3:n] ~ -1 + Xmat)
summary(modar)
modar$coefficients
modar.back$coefficients
alph0 = modar.back$coefficients[1]
alph1 = modar.back$coefficients[2]
alph2 = modar.back$coefficients[3]
-alph0/alph2
modar$coefficients
alph0 = modar.back$coefficients[1]
alph1 = modar.back$coefficients[2]
alph2 = modar.back$coefficients[3]
-alph0/alph2
alph0 = modar.back$coefficients[1]
alph1 = modar.back$coefficients[2]
alph2 = modar.back$coefficients[3]
-alph0/alph2
-alph1/alph2
alph0 = modar.back$coefficients[1]
alph1 = modar.back$coefficients[2]
alph2 = modar.back$coefficients[3]
-alph0/alph2
-alph1/alph2
1/alph2
alph0 = modar.back$coefficients[1]
alph1 = modar.back$coefficients[2]
alph2 = modar.back$coefficients[3]
-alph0/alph2
-alph1/alph2
1/alph2
modar.back$coefficients
y.pred = c(rep(-9999,36), y)
k = 36
while(k>0) {
y.pred[k] = sum(modar.back$coefficients * c(1, y.pred[k+1], y.pred[k+2]))
k = k-1
}
y.pred = c(rep(-9999,36), y)
k = 36
while(k>0) {
y.pred[k] = sum(modar.back$coefficients * c(1, y.pred[k+1], y.pred[k+2]))
k = k-1
}
plot((-36+1):n, y.pred, type='l')
y.pred = c(rep(-9999,36), y)
k = 36
while(k>0) {
y.pred[k] = sum(modar.back$coefficients * c(1, y.pred[k+1], y.pred[k+2]))
k = k-1
}
plot((-36+1):n, y.pred, type='l')
y.full = c(rep(-9999,36), y) # y prepended with the 36 backward predictions
k = 36
while(k>0) {
y.full[k] = sum(modar.back$coefficients * c(1, y.pred[k+1], y.pred[k+2]))
k = k-1
}
sighat = sqrt((sum((modar.back$residuals)^2))/(n-2*2-1)) #note: we use modar.back here
Gamhat = matrix(sighat^2, 1, 1)
vkp = matrix(modar.back$coefficients[2], 1, 1) #note: we use modar.back here
for(i in 1:(36-1))
{
covterm = Gamhat %*% vkp
varterm = (sighat^2) + (t(vkp) %*% (Gamhat %*% vkp))
Gamhat = cbind(Gamhat, covterm)
Gamhat = rbind(Gamhat, c(t(covterm), varterm))
# update vkp
if (i < p) {vkp = c(modar.back$coefficients[(i+2)], vkp)}
if (i >= p) {vkp = c(0, vkp)}
}
predsd = sqrt(diag(Gamhat))
predsd = rev(predsd) # reverse order because the prediction goes backwards
predsd
y.full = c(rep(-9999,36), y) # y prepended with the 36 backward predictions
k = 36
while(k>0) {
y.full[k] = sum(modar.back$coefficients * c(1, y.pred[k+1], y.pred[k+2]))
k = k-1
}
sighat = sqrt((sum((modar.back$residuals)^2))/(n-2*2-1)) #note: we use modar.back here
Gamhat = matrix(sighat^2, 1, 1)
vkp = matrix(modar.back$coefficients[2], 1, 1) #note: we use modar.back here
for(i in 1:(36-1))
{
covterm = Gamhat %*% vkp
varterm = (sighat^2) + (t(vkp) %*% (Gamhat %*% vkp))
Gamhat = cbind(Gamhat, covterm)
Gamhat = rbind(Gamhat, c(t(covterm), varterm))
# update vkp
if (i < p) {vkp = c(modar.back$coefficients[(i+2)], vkp)}
if (i >= p) {vkp = c(0, vkp)}
}
predsd = sqrt(diag(Gamhat))
predsd = rev(predsd) # reverse order because the prediction goes backwards
predsd
yupper = y.full + c(2*predsd, rep(0, n))
ylower = y.full - c(2*predsd, rep(0, n))
end = 100 # we only plot observations before this time
df = data.frame(
t = (-35):end,
y = y.full[1:(36+end)],
yupper = yupper[1:(36+end)],
ylower = ylower[1:(36+end)]
)
ggplot(df) +
geom_line(aes(x=t, y=y)) +
geom_vline(xintercept = 1, color='red') +
geom_ribbon(aes(x=t, ymin=ylower, ymax=yupper), alpha=.2)
y = pop$POPTHM
n = length(y)
plot(1:n, y)
?arima
